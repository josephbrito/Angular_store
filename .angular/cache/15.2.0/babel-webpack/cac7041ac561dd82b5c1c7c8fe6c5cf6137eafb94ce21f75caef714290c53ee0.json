{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CartService {\n  constructor(http) {\n    this.http = http;\n    this.items = [];\n  }\n  addToCart(product) {\n    this.items.push(product);\n  }\n  getItems() {\n    return this.items;\n  }\n  clearItems() {\n    this.items = [];\n    return this.items;\n  }\n  onDeleteItem(id) {\n    const newItems = this.items.filter(item => item.id !== id);\n    this.items = newItems;\n    return this.items;\n  }\n  getShippingPrices() {\n    return this.http.get(\"/assets/shipping.json\");\n  }\n}\nCartService.ɵfac = function CartService_Factory(t) {\n  return new (t || CartService)(i0.ɵɵinject(i1.HttpClient));\n};\nCartService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CartService,\n  factory: CartService.ɵfac,\n  providedIn: \"root\"\n});","map":{"version":3,"mappings":";;AAOA,OAAM,MAAOA,WAAW;EACtBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IACxB,UAAK,GAAc,EAAE;EADkB;EAGvCC,SAAS,CAACC,OAAgB;IACxB,IAAI,CAACC,KAAK,CAACC,IAAI,CAACF,OAAO,CAAC;EAC1B;EAEAG,QAAQ;IACN,OAAO,IAAI,CAACF,KAAK;EACnB;EAEAG,UAAU;IACR,IAAI,CAACH,KAAK,GAAG,EAAE;IACf,OAAO,IAAI,CAACA,KAAK;EACnB;EAEAI,YAAY,CAACC,EAAU;IACrB,MAAMC,QAAQ,GAAG,IAAI,CAACN,KAAK,CAACO,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACH,EAAE,KAAKA,EAAE,CAAC;IAC5D,IAAI,CAACL,KAAK,GAAGM,QAAQ;IACrB,OAAO,IAAI,CAACN,KAAK;EACnB;EAEAS,iBAAiB;IACf,OAAO,IAAI,CAACZ,IAAI,CAACa,GAAG,CAClB,uBAAuB,CACxB;EACH;;AA3BWf,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAgB,SAAXhB,WAAW;EAAAiB,YAFV;AAAM","names":["CartService","constructor","http","addToCart","product","items","push","getItems","clearItems","onDeleteItem","id","newItems","filter","item","getShippingPrices","get","factory","providedIn"],"sourceRoot":"","sources":["/Users/josebrito/Documents/angular_store/src/app/cart.service.ts"],"sourcesContent":["import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Product } from \"./products\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class CartService {\n  constructor(private http: HttpClient) {}\n  items: Product[] = [];\n\n  addToCart(product: Product) {\n    this.items.push(product);\n  }\n\n  getItems() {\n    return this.items;\n  }\n\n  clearItems() {\n    this.items = [];\n    return this.items;\n  }\n\n  onDeleteItem(id: number) {\n    const newItems = this.items.filter((item) => item.id !== id);\n    this.items = newItems;\n    return this.items;\n  }\n\n  getShippingPrices() {\n    return this.http.get<{ type: string; price: number }[]>(\n      \"/assets/shipping.json\"\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}